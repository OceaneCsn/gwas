pca <- dudi.pca(x)
library(tidyverse)
x <- regmap[,str_detect(colnames(regmap), "change")]
pca <- dudi.pca(x)
x <- na.omit(x)
pca <- dudi.pca(x)
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li
x <- na.omit(regmap)
x <- x[,str_detect(colnames(x), "change")]
x <- na.omit(regmap)
eco <- x$ecotype
pca$li$ecotype <- eco
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li$ecotype <- eco
View(annot)
annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country) + geom_point()
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point()
ggplot(pca$co, aes(x = Axis1, y = Axis2)) + geom_point()
pca$co
ggplot(pca$co, aes(x = Comp1, y = Comp2)) + geom_point()
x <- x[,str_detect(colnames(x), "change")]
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point()
ggplot(pca$co, aes(x = Comp1, y = Comp2)) + geom_point()
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
load("rdata/phenotypes_regmap.RData")
load("rdata/SNP_matrix_62_accessions_regmap_1001genomes_snp_only.RData")
load("rdata/accessions_regmap_annotation.RData")
library(ade4)
library(tidyverse)
x <- na.omit(regmap)
eco <- x$ecotype
x <- x[,str_detect(colnames(x), "change")]
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
pca <- dudi.pca(x, scannf = FALSE, nf = 4)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis3, y = Axis2, col = country)) + geom_point(size = 2)
ggplot(pca$li, aes(x = Axis3, y = Axis4, col = country)) + geom_point(size = 2)
load("rdata/phenotypes_regmap.RData")
load("rdata/SNP_matrix_62_accessions_regmap_1001genomes_snp_only.RData")
load("rdata/accessions_regmap_annotation.RData")
library(ade4)
library(tidyverse)
x <- na.omit(regmap)
eco <- x$ecotype
x <- x[,str_detect(colnames(x), "change")]
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2)) + geom_point()
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
View(annot)
intersect(regmap$ecotype, annot$Ecotype_ID)
length(intersect(regmap$ecotype, annot$Ecotype_ID))
regmap <- read.csv("data/phenotypes_regmap.csv", na.strings = ".")
View(regmap)
# get significant SNPs
t <- gwas$signSnp$Y[,c("pValue", "chr", "pos")]
# loads phenotype data
load("rdata/phenotypes_regmap.RData")
# loads genotype data (snp)
load("rdata/SNP_matrix_62_accessions_regmap_1001genomes_snp_only.RData")
# loads snp locations in the genome
load("rdata/snp_chromosomic_map.RData")
library(statgenGWAS)
# individuals for which we have snp data
acc <- intersect(regmap$ecotype, colnames(snp))
a <- annot[annot$Ecotype_ID %in% acc,]
# chromosomic positions
colnames(map) <- c("chr", "pos")
head(map)
# phenotype data are the changes caused by elevated CO2
Y <- regmap[match(acc, regmap$ecotype),stringr::str_detect(colnames(regmap), "change")]
Y$genotype <- acc
Y <- Y[,c("genotype", colnames(Y)[colnames(Y) != "genotype"])]
# snps
X <- t(snp)
# kinship matrix : computes genetic relatedness between individuals
kin <- kinship(X, method = c("astle"))
heatmap(kin)
# object storing all info for gwas analysis with statgenGWAS
gData <- createGData(geno = X, map = map, pheno = Y, kin = kin)
summary(gData)
# running mixed models for all snps and getting their pvalues
gwas <- runSingleTraitGwas(gData = gData,
traits = c("N_change"),
GLSMethod = "single",
remlAlgo = "EMMA",
thrType = "fixed",
LODThr = 6,
nCores = 6)
# get significant SNPs
t <- gwas$signSnp$Y[,c("pValue", "chr", "pos")]
t
# bed variable with gene coordinates
load("rdata/tair10_annotation.Rdata")
get_overlapping_region <- function(chr, pos, bed, type = "all"){
d <- bed[bed$chr == paste0("Chr",chr),]
d <- bed[pos > bed$start & pos < bed$end, ]
d$name <- stringr::str_split_fixed(stringr::str_split_fixed(d$name, "ID=", 2)[,2], ";", 2)[,1]
if(type == "gene")
d <- d[d$type == "gene",]
d$snp_pos <- rep(pos, nrow(d))
return(d)
}
describe_snps <- function(t, bed, type = "gene"){
res <- get_overlapping_region(as.numeric(t[1, "chr"]),as.numeric(t[1, "pos"]), bed,
type = type)
for(i in 2:nrow(t)){
res <- rbind.data.frame(res,
get_overlapping_region(as.numeric(t[i, "chr"]),
as.numeric(t[i, "pos"]), bed,
type = type))
}
return(res)
}
genes <- describe_snps(t, bed)
genes
# functions that find which genes are around
get_overlapping_region <- function(chr, pos, bed, type = "all"){
d <- bed[bed$chr == paste0("Chr",chr),]
d <- bed[pos > bed$start & pos < bed$end, ]
d$name <- stringr::str_split_fixed(stringr::str_split_fixed(d$name, "ID=", 2)[,2], ";", 2)[,1]
if(type == "gene")
d <- d[d$type == "gene",]
d$snp_pos <- rep(pos, nrow(d))
print(d)
return(d)
}
describe_snps <- function(t, bed, type = "gene"){
res <- get_overlapping_region(as.numeric(t[1, "chr"]),as.numeric(t[1, "pos"]), bed,
type = type)
for(i in 2:nrow(t)){
res <- rbind.data.frame(res,
get_overlapping_region(as.numeric(t[i, "chr"]),
as.numeric(t[i, "pos"]), bed,
type = type))
}
return(res)
}
# result !!! now the genes found
# can be searched on TAIR10 to see their functions, etc
genes <- describe_snps(t, bed)
# functions that find which genes are around
get_overlapping_region <- function(chr, pos, bed, type = "all"){
d <- bed[bed$chr == paste0("Chr",chr),]
d <- bed[pos > bed$start & pos < bed$end, ]
d$name <- stringr::str_split_fixed(stringr::str_split_fixed(d$name, "ID=", 2)[,2], ";", 2)[,1]
print(d)
if(type == "gene")
d <- d[d$type == "gene",]
d$snp_pos <- rep(pos, nrow(d))
return(d)
}
describe_snps <- function(t, bed, type = "gene"){
res <- get_overlapping_region(as.numeric(t[1, "chr"]),as.numeric(t[1, "pos"]), bed,
type = type)
for(i in 2:nrow(t)){
res <- rbind.data.frame(res,
get_overlapping_region(as.numeric(t[i, "chr"]),
as.numeric(t[i, "pos"]), bed,
type = type))
}
return(res)
}
# result !!! now the genes found
# can be searched on TAIR10 to see their functions, etc
genes <- describe_snps(t, bed)
genes
load("rdata/phenotypes_regmap.RData")
load("rdata/accessions_regmap_annotation.RData")
length(intersect(regmap$ecotype, annot$Ecotype_ID))
library(ade4)
library(tidyverse)
x <- na.omit(regmap)
eco <- x$ecotype
x <- x[,str_detect(colnames(x), "change")]
View(x)
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2)) + geom_point()
pca$co
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_text()
load("rdata/phenotypes_regmap_unfiltered.RData")
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
library(ggplot2)
d <- reshape2::melt(regmap[,stringr::str_detect(colnames(regmap), "change")])
ggplot(d, aes(x = variable, y = value, fill = variable)) +
geom_hline(yintercept = 0, size = 2, col = "darkred") +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0), alpha = 0.8) +
geom_point(aes(y = value, color = variable), position = position_jitter(width = 0.15), size = 1, alpha = 0.7) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.8, fill = "white") +
labs(y = "Relative change due to eCO2", x = NULL) + ggtitle("Relative change due to eCO2")
load("rdata/phenotypes_regmap.RData")
d <- reshape2::melt(regmap[,stringr::str_detect(colnames(regmap), "change")])
ggplot(d, aes(x = variable, y = value, fill = variable)) +
geom_hline(yintercept = 0, size = 2, col = "darkred") +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0), alpha = 0.8) +
geom_point(aes(y = value, color = variable), position = position_jitter(width = 0.15), size = 1.25, alpha = 0.7) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.8, fill = "white") +
labs(y = "Relative change due to eCO2 (%)", x = NULL) + ggtitle("Relative change due to eCO2")
load("rdata/phenotypes_regmap.RData")
d <- reshape2::melt(regmap[,stringr::str_detect(colnames(regmap), "change")])
ggplot(d, aes(x = variable, y = value, fill = variable)) +
geom_hline(yintercept = 0, size = 2, col = "darkred") +
geom_flat_violin(position = position_nudge(x = 0.2, y = 0), alpha = 0.8) +
geom_point(aes(y = value, color = variable), position = position_jitter(width = 0.15), size = 1.25, alpha = 0.7) +
geom_boxplot(width = 0.2, outlier.shape = NA, alpha = 0.8, fill = "white") +
labs(y = "Relative change due to eCO2 (%)", x = NULL) + ggtitle("Relative change due to eCO2")
ggplot(pca$li, aes(x = Axis1, y = Axis2)) + geom_point(size = 2)
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text()
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_text()
library(patchwork)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_text() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text()
install.packages("adegraphics")
library(adegraphics)
adegraphics::s.corcircle(pca)
adegraphics::s.corcircle(pca, xax = 1, yax = 2)
pca <- dudi.pca(x, scannf = FALSE, nf = 2)
adegraphics::s.corcircle(pca, xax = 1, yax = 2)
ade4::s.corcircle(pca, xax = 1, yax = 2)
ade4::s.corcircle(pca$co, xax = 1, yax = 2)
adegraphics::s.corcircle(pca$co, xax = 1, yax = 2)
ade
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text() +
ade4::s.corcircle(pca$co, xax = 1, yax = 2)
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text()
ade4::s.corcircle(pca$co, xax = 1, yax = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label()
ade4::s.corcircle(pca$co, xax = 1, yax = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label()
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text()
pca$li
pca <- dudi.pca(x, scannf = FALSE, nf = 3)
pca$li$ecotype <- eco
pca$li$country <- annot[match(pca$li$ecotype, annot$Ecotype_ID), "country"]
ggplot(pca$li, aes(x = Axis1, y = Axis2, col = country)) + geom_point(size = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text()
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text(nudge_y = 0.2)
kmeans <- kmeans(x, centers = 3)
kmeans$cluster
kmeans[rownames(pca$li)]
rownames(pca$li)
kmeans
kmeans$cluster[rownames(pca$li)]
pca$li$cluster <- kmeans$cluster[rownames(pca$li)]
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co)), col = cluster) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li))) + geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li)), col = cluster) + geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = cluster)) + geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) + geom_point(size = 2)+ geom_text(nudge_y = 0.2)
x[rownames(pca$li)]
x[rownames(pca$li),]
pca$li[colnames(x)] <- x[rownames(pca$li),]
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change) +
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_brewer()
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c()
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change")
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change as color code")
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code")
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code")
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = C_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with C change (%) as color code")
ggplot(pca$li, aes(x = Axis3, y = Axis3, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis2, y = Axis3, label = rownames(pca$li), color = C_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with C change (%) as color code")
ggplot(pca$li, aes(x = Axis2, y = Axis3, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis2, y = Axis3, label = rownames(pca$li), color = C_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with C change (%) as color code")
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)
s.class(pca$li)
s.class(pc)
s.class(pca)
adegraphics::biplot(pca)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ade4::s.corcircle(pca$co, xax = 1, yax = 2)
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = C_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with C change (%) as color code")
(ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = N_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with N change (%) as color code") +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = C_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with C change (%) as color code")) /
(ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = Mn_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with Mn change (%) as color code") +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = Fe_change)) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2) + scale_color_viridis_c() + ggtitle("PCA with Fe change (%) as color code"))
pca$li
hist(pca$li$Axis1)
hist(pca$li$Axis1, breaks = 10)
hist(pca$li$Axis1, breaks = 100)
ggplot(pca$li, aes(x = Axis1)) + geom_density()
ggplot(pca$li, aes(x = Axis1)) + geom_density(fill = "green", alpha = 0.1)
ggplot(pca$li, aes(x = Axis1)) + geom_density(fill = "green", alpha = 0.1) + ggtitle("Distribution of PCA1")
ggplot(pca$li, aes(x = Axis1)) + geom_density(fill = "green", alpha = 0.1) + ggtitle("Distribution of PCA1") + geom_point()
ggplot(pca$li, aes(x = Axis1)) + geom_density(fill = "green", alpha = 0.1) + ggtitle("Distribution of PCA1") + geom_point(y=0)
pca$li
x$cluster <- kmeans$cluster[rownames(x)]
d <- melt(x)
d <- reshape2::melt(x)
View(d)
x$cluster <- kmeans$cluster[rownames(x)]
x$accession <- rownames(x)
d <- reshape2::melt(x)
kmeans$cluster[d$accession]
ggplot(x, aes(x = variable, y = value)) + geom_boxplot()
ggplot(d, aes(x = variable, y = value)) + geom_boxplot()
ggplot(d, aes(x = variable, y = value, fill = cluster)) + geom_boxplot()
x$accession <- rownames(x)
d <- reshape2::melt(x)
d$cluster <- kmeans$cluster[d$accession]
ggplot(d, aes(x = variable, y = value, fill = cluster)) + geom_boxplot()
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) + geom_boxplot()
x$accession <- rownames(x)
d <- reshape2::melt(x)
d$cluster <- kmeans$cluster[d$accession]
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) + geom_boxplot()
x <- na.omit(regmap)
eco <- x$ecotype
x <- x[,str_detect(colnames(x), "change")]
x$accession <- rownames(x)
d <- reshape2::melt(x)
d$cluster <- kmeans$cluster[d$accession]
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) + geom_boxplot()
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) + geom_boxplot() + scale_fill_brewer(palette = "Accent")
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes")
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)+ scale_color_brewer(palette = "Accent")
ggplot(d, aes(x = variable, y = value, group = accession, fill = factor(cluster))) + geom_line() +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes")
ggplot(d, aes(x = variable, y = value, group = accession, fill = factor(cluster))) + geom_line(aes(color = factor(cluster)))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes")
ggplot(d, aes(x = variable, y = value, group = accession, fill = factor(cluster))) + geom_line(aes(color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes")
ggplot(d, aes(x = variable, y = value, group = accession, fill = factor(cluster))) + geom_line(aes(color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes") + scale_color_brewer(palette = "Accent")
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) + geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes") + scale_color_brewer(palette = "Accent")
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 2, col = "darkred")
ggplot(d, aes(x = variable, y = value, fill = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot() + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "dark") + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black") + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.3) + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 3)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred") + scale_fill_discrete(breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1])
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent"breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1]) +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent"breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1]) +
ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent"breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1]) + ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent", breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1]) + ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred")
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred") + scale_x_discrete(breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1])
ggplot(d, aes(x = variable, y = value, color = factor(cluster))) +
geom_line(aes(group = accession, color = factor(cluster))) +
geom_boxplot(color = "black", alpha = 0.7) + scale_fill_brewer(palette = "Accent") + ggtitle("Cluster profiles in elements changes") +
scale_color_brewer(palette = "Accent") +
facet_wrap(~cluster, nrow = 1)+
geom_hline(yintercept = 0, size = 1, col = "darkred") + scale_x_discrete(breaks = unique(d$variable),
labels = str_split_fixed(unique(d$variable), '_', 2)[,1])+
xlab("") + ylab("Change (%)")
ggplot(pca$co, aes(x = Comp1, y = Comp2, label = rownames(pca$co))) + geom_point() + geom_label() +
ggplot(pca$li, aes(x = Axis1, y = Axis2, label = rownames(pca$li), color = factor(cluster))) +
geom_point(size = 2)+ geom_text(nudge_y = 0.2)+ scale_color_brewer(palette = "Accent")
