---
title: "Analyse cinétique : profils de quelques gènes d'intéret"
author: "Océane"
date: "10/1/2020"
output: 
  prettydoc::html_pretty:
    theme: leonids
    highlight: github
    df_print: paged
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	fig.height = 10,
	fig.width = 12,
	message = FALSE,
	warning = FALSE
)
library(tidyverse, quietly = T)
library(RColorBrewer)
source('../Scripts/utilities.R')
```



# Gènes des voies nitrates dans les racines

```{r data, fig.height = 12,fig.width = 12,message=FALSE, warning=FALSE}

# load("../Data/normalized_root.RData")
# DIANE::draw_expression_levels(normalized_root, c(nrt2.1))+geom_smooth()
# tcc <- DIANE::normalize(normalized_root, str_split_fixed(colnames(normalized_root), '_', 2)[,1])
# tcc <- DIANE::filter_low_counts(tcc, thr = 10*ncol(normalized_root))
# normalized_root <- data.frame(TCC::getNormalizedData(tcc))
load(file = "../Data/norm_root.RData")
#normalized_root <- normalized_root[,order(colnames(normalized_root))]
#save(normalized_root, file = "../Data/norm_root.RData")
annot <- DIANE::get_gene_information(rownames(normalized_root), "Arabidopsis thaliana")
#DIANE::draw_PCA(normalized_root)

nrt2.1 <- "AT1G08090"

bt2 <- "AT3G48360"
bt1 <- "AT5G63160"
hrs1 <- "AT1G13300"

hho2 <- "AT1G68670"
hho3 <- "AT1G25550"

G6PD2 <- "AT5G13110"
G6PD3 <- "AT1G24280"


RFNR1 <- "AT4G05390"
RFNR2 <- "AT1G30510"

AMTs <- c("AT1G64780", "AT3G24300")
glutas <- c("AT1G03850", "AT1G66200", "AT4G24110", "AT5G18170")

lbds <- rownames(gene_annotations$`Arabidopsis thaliana`[
  str_detect(gene_annotations$`Arabidopsis thaliana`$label, 
             "LBD"),])

lbds <- split(lbds, ceiling(seq_along(lbds)/10))

draw_genes_in_time(normalized_root, genes = c(lbds[[1]]), annot = annot, mean_normalized = FALSE) / 
draw_genes_in_time(normalized_root, genes = c(lbds[[2]]), annot = annot, mean_normalized = FALSE) 

draw_genes_in_time(normalized_root, genes = c(lbds[[3]]), annot = annot, mean_normalized = FALSE) 
  

draw_genes_in_time(normalized_root, genes = c(bt1, bt2), annot = annot, mean_normalized = F) /
draw_genes_in_time(normalized_root, genes = c(hho2, hho3, hrs1), annot = annot, mean_normalized = F)


draw_genes(data = normalized_root, genes = c(bt1, bt2), annot = annot, mean_normalized = F) /
draw_genes(data = normalized_root, genes = c(hho2, hho3, hrs1), annot = annot, mean_normalized = F)

draw_genes(data = normalized_root, genes = c(bt1, bt2, hho2, hho3, hrs1), annot = annot, mean_normalized = T) /
draw_genes_in_time(data = normalized_root, genes = c(bt1, bt2, hho2, hho3, hrs1), annot = annot, mean_normalized = T)


other_nitrate_genes <- rownames(gene_annotations$`Arabidopsis thaliana`[
  str_detect(gene_annotations$`Arabidopsis thaliana`$label, 
             "NIA1|NIA2|NIR"),])

nar2.1 <- "AT5G50200"
nrt1.1 <- "AT1G12110"

draw_genes_in_time(normalized_root, genes = c(nrt2.1, other_nitrate_genes), annot = annot, mean_normalized = F) /
  draw_genes_in_time(normalized_root, genes = c(nrt1.1, nar2.1), annot = annot, mean_normalized = F)


draw_genes(normalized_root, genes = c(nrt2.1, other_nitrate_genes), annot = annot, mean_normalized = F) /
  draw_genes(normalized_root, genes = c(nrt1.1, nar2.1), annot = annot, mean_normalized = F)


draw_genes(normalized_root, genes = c(nrt2.1,nrt1.1, nar2.1, other_nitrate_genes), annot = annot, mean_normalized = T) /
  draw_genes_in_time(normalized_root, genes = c(nrt2.1, nrt1.1, nar2.1, other_nitrate_genes), annot = annot, mean_normalized = T, df = 5) + ggtitle("Nitrate-related genes")

  draw_genes_in_time(normalized_root, genes = c(nrt2.1, nrt1.1, nar2.1), annot = annot, mean_normalized = T, df = 5)/
      draw_genes_in_time(normalized_root, genes = c(nrt2.1, nrt1.1, nar2.1), annot = annot, mean_normalized = T, df = 4)
#draw_genes_in_time(normalized_root, genes = AMTs, annot = annot, mean_normalized = F)

  draw_genes(normalized_root, genes = sample(rownames(normalized_root), 12), annot = annot, mean_normalized = T)
  
  
draw_genes(normalized_root, genes = c(G6PD2, G6PD3), annot = annot, mean_normalized = F) /
draw_genes_in_time(normalized_root, genes = c(G6PD2, G6PD3), annot = annot, mean_normalized = F)

draw_genes(normalized_root, genes = c(G6PD2, G6PD3, RFNR1, RFNR2), annot = annot, mean_normalized = T) /
draw_genes(normalized_root, genes = c(RFNR1, RFNR2), annot = annot, mean_normalized = F) 



draw_genes_in_time(normalized_root, genes = glutas, annot = annot, mean_normalized = F) / 
draw_genes_in_time(normalized_root, genes = glutas, annot = annot, mean_normalized = T)

draw_genes(normalized_root, genes = glutas, annot = annot, mean_normalized = F) / 
draw_genes(normalized_root, genes = glutas, annot = annot, mean_normalized = T)


load("../Data/nudix_roxies.RData")
infos <- DIANE::get_gene_information(nudix_roxies, "Arabidopsis thaliana")
roxies <- rownames(infos[stringr::str_detect(infos$label, "ROXY|GRXS"),])
ceps <- rownames(infos[stringr::str_detect(infos$label, "CEP"),])
nudix <- c(rownames(infos[stringr::str_detect(infos$label, "NUD"),]), "AT2G04440")



draw_genes(normalized_root, genes = roxies, annot = annot, mean_normalized = T) /
draw_genes(normalized_root, genes = ceps, annot = annot, mean_normalized = T)/
draw_genes(normalized_root, genes = nudix, annot = annot, mean_normalized = T)

draw_genes(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = F) /
draw_genes(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = T)
```

# Et nos candidats issus de la combinatoire Co2*N dans les racines ?

```{r fig.height=10, warning=TRUE}
candidates <- c("AT4G22680","AT3G23250","AT3G25730","AT3G03660",
                "AT3G19580","AT4G11880","AT5G43175","AT5G67060",
                "AT2G21900","AT1G58100","AT1G72650","AT1G34670")
# 
# for(can in candidates){
#     print(draw_genes_in_time(data.frame(normalized_root), c(can), annot, mean_normalized = F))
# }

draw_genes(normalized_root, genes = candidates, annot = annot, mean_normalized = T) /
  draw_genes_in_time(normalized_root, candidates, annot = annot, mean_normalized = T, df = 5) + ggtitle("Candidate genes")

# draw_genes(data.frame(normalized_root), c("AT3G23250", "AT3G19580", "AT2G21900"), annot, mean_normalized = T) / draw_genes_in_time(data.frame(normalized_root), c("AT3G23250", "AT3G19580", "AT2G21900" ), annot, mean_normalized = T, spline = T)
# 
# draw_genes_in_time(data.frame(normalized_root), c("AT1G34670"), annot, mean_normalized = F, spline = T)
# draw_genes_in_time(data.frame(normalized_root), c("AT1G34670"), annot, mean_normalized = F, df = 4) 

candidates_up <- c("AT4G22680","AT3G23250","AT3G03660",
                "AT3G19580","AT4G11880","AT5G43175","AT5G67060",
                "AT2G21900","AT1G58100","AT1G72650")

draw_genes(normalized_root, genes = candidates_up, annot = annot, mean_normalized = T)/
  draw_genes(normalized_root, genes = setdiff(candidates, candidates_up), annot = annot, mean_normalized = T)
```


# DEA entre controles

Je regarde lesquels des gènes d'intéret sont trouvés en comparant les deux ocntroles en DEA classique (edgeR)

```{r}
conditions <- str_split_fixed(colnames(normalized_root), '_', 2)[, 1]
conds <- unique(conditions)
tcc <- list(counts = normalized_root)
fit <- DIANE::estimateDispersion(tcc, conditions)

topTags <- DIANE::estimateDEGs(
  fit,
  reference = "root.0.ACO2",
  perturbation = "root.9.ECO2",
  p.value = 0.05,
  lfc = 0
)
DEgenes <- topTags$table$genes
print(paste("Genes DE between aCO2 and eCO2 with edgeR :", length(DEgenes)))

load("../Data/genes_of_interest.RData")
common <- intersect(rownames(interest_genes, nrt1.1, nar2.1), DEgenes)
gene_annotations$`Arabidopsis thaliana`[common,]
```


# DEA 1W et ECO2

Je regarde lesquels des gènes d'intéret sont trouvés en comparant les deux ocntroles en DEA classique (edgeR)

```{r}
topTags <- DIANE::estimateDEGs(
  fit,
  reference = "root.0.ACO2",
  perturbation = "root.2.2H",
  p.value = 0.05,
  lfc = 0
)
DEgenes <- topTags$table$genes
print(paste("Genes DE between aCO2 and eCO2 with edgeR :", length(DEgenes)))


common <- intersect(rownames(interest_genes), DEgenes)
topTags$table[common,]
```

# Gènes de la photosynthèse dans les feuilles

```{r, fig.height=6}
# load("../Data/normalized_shoot.RData")
# tcc <- DIANE::normalize(normalized_shoot, str_split_fixed(colnames(normalized_shoot), '_', 2)[,1])
# tcc <- DIANE::filter_low_counts(tcc, thr = 10*ncol(normalized_shoot))
# normalized_shoot <- data.frame(TCC::getNormalizedData(tcc))
#save(normalized_shoot, file = "norm_normalized_shoot.RData")

load(file = "../Data/norm_shoot.RData")
normalized_shoot <- normalized_shoot[,order(colnames(normalized_shoot))]
annot <- DIANE::get_gene_information(rownames(normalized_shoot), "Arabidopsis thaliana")
rubisco_genes <- rownames(na.omit(annot[str_detect(annot$label, "RBCS"),]))

draw_genes_in_time(normalized_shoot, rubisco_genes, annot) /
draw_genes_in_time(normalized_shoot, rubisco_genes, annot, mean_normalized = TRUE)

draw_genes(normalized_shoot, rubisco_genes, annot) /
draw_genes(normalized_shoot, rubisco_genes, annot, mean_normalized = TRUE)


draw_genes_in_time(normalized_shoot, genes = c(nrt2.1, nrt1.1, nar2.1, other_nitrate_genes), annot = annot, mean_normalized = T) /
  draw_genes(normalized_shoot, genes = c(nrt2.1, nrt1.1, nar2.1, other_nitrate_genes), annot = annot, mean_normalized = T)

draw_genes_in_time(normalized_shoot, genes = c(nrt2.1, other_nitrate_genes), annot = annot, mean_normalized = F) /
  draw_genes_in_time(normalized_shoot, genes = c(nrt1.1, nar2.1), annot = annot, mean_normalized = F)


draw_genes_in_time(normalized_root, genes = c(lbds[[1]]), annot = annot, mean_normalized = TRUE) / 
draw_genes_in_time(normalized_root, genes = c(lbds[[2]]), annot = annot, mean_normalized = TRUE) 

draw_genes_in_time(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = TRUE) /
  draw_genes_in_time(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = F) 


draw_genes(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = TRUE) /
  draw_genes(normalized_root, genes = nudix_roxies, annot = annot, mean_normalized = F) 

draw_genes_in_time(normalized_root, genes = c(lbds[[3]]), annot = annot, mean_normalized = TRUE) 



draw_genes(normalized_shoot, genes = roxies, annot = annot, mean_normalized = T) /
draw_genes(normalized_shoot, genes = ceps, annot = annot, mean_normalized = T)/
draw_genes(normalized_shoot, genes = nudix, annot = annot, mean_normalized = T)


draw_genes(normalized_root, genes = roxies, annot = annot, mean_normalized = T) /
draw_genes(normalized_root, genes = ceps, annot = annot, mean_normalized = T)

draw_genes(normalized_root, genes = nudix, annot = annot, mean_normalized = T)
```




